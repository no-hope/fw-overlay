# -*-eselect-*-  vim: ft=eselect
# Copyright 2005-2013 Gentoo Foundation
# Distributed under the terms of the GNU GPL version 2 or later

_jvm_dir="/usr/lib/jvm"
_jvm_libdir="jre/lib/amd64"
_hsdis_file="hsdis-amd64.so"
_hsdis_relfile="${_jvm_libdir}/${_hsdis_file}"

DESCRIPTION="Manage HSDIS plugin for HotSpot Java Virtual Machine"
MAINTAINER="ketoth.xupack@gmail.com"
VERSION="1.3.6"

find_targets() {
	local bcdir
	for bcdir in ${EROOT%/}${_jvm_dir}/*
	do
		[[ -e ${bcdir} && "$(${bcdir}/bin/java -version 2>&1)" =~ .*HotSpot|OpenJDK.* ]] && basename "${bcdir}"
	done | sort -u
}

is_enabled() {
	[[ -e "${EROOT%/}${_jvm_dir}/$1/${_hsdis_relfile}" ]]
}

### list action ###

describe_list() {
	echo "List compatible Java Virtual Machines"
}

do_list() {
	local targets i
	targets=( $(find_targets) )

	for (( i = 0; i < ${#targets[@]}; i++ )); do
		is_enabled "${targets[i]}" \
			&& targets[i]=$(highlight_marker "${targets[i]}")
	done

	write_list_start "Available HotSpot Java Virtual Machines:"
	write_numbered_list -m "(none found)" "${targets[@]}"
}

### enable action ###

describe_enable() {
	echo "Enable HSDIS plugin for specified Java Virtual Machines"
}

describe_enable_parameters() {
	echo "<target>"
}

describe_enable_options() {
	echo "<target> : Target name or number (from 'list' action)"
}

do_enable() {
	local bcdir bc mode="" file target targets

	bcdir=${EROOT%/}/${_jvm_dir}
	[[ $# -eq 0 ]] && die -q "You didn't specify any compatible Java Virtual Machine to install plugin to."

	targets=( $(find_targets) )

	for bc in "$@"; do
		target=${bc}
		is_number "${target}" && target=${targets[target-1]}

		[[ -z ${target} ]] \
			&& die -q "Target \"${bc}\" doesn't appear to be valid!"

		bc=${target}

		file="${bcdir}/${bc}/${_hsdis_relfile}"

		# already installed?
		if [[ -e ${file} ]]; then
			write_error_msg "plugin already already installed"
			continue
		fi

		# finally, create the symlink
		ln -s "/opt/hsdis/${_hsdis_file}" "${file}" \
			|| die -q "Failed to create symlink from ${file} to ${bcdir}"
	done
}

### disable action ###

describe_disable() {
	echo "Disable HSDIS plugin for specified Java Virtual Machines"
}

describe_disable_parameters() {
	echo "<target>"
}

describe_disable_options() {
	echo "<target> : Target name or number (from 'list' action)"
}

do_disable() {
	local bcdir bc targets target file

	bcdir=${EROOT%/}/${_jvm_dir}

	[[ $# -eq 0 ]] && die -q "You didn't specify any JVM to disable"

	targets=( $(find_targets) )

	for bc in "$@"; do
		target=${bc}
		is_number "${target}" && target=${targets[target-1]}

		[[ -z ${target} ]] \
			&& die -q "Target \"${bc}\" doesn't appear to be valid!"

		bc=${target}
		file=${bcdir}/${bc}/${_hsdis_relfile}

		# is it installed?
		if [[ ! -e ${file} ]]; then
			write_error_msg "plugin is not installed for ${bc} ${file}"
			continue
		fi

		# remove it if we have permissions
		if [[ -w $(dirname ${file}) ]]; then
			rm "${file}" || die -q "Failed to remove ${file}"
		else
			die -q "You don't have permission to remove ${file}"
		fi
	done
}
